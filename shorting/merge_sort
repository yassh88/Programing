var arr = [12, 11, 13, 7, 6, 5, 9]; 
var l = 0;
var r= arr.length;
console.log(arr)
mergeSort(arr, l ,r);

function mergeSort(arr, l , r){
    if(l< r){
      let  m =  parseInt(l+(r-l)/2,10);
      console.log(' L: '+ l + ' m: '+ m  + ' r: '+ r)
      console.log(arr.slice(l, m) +"-----"+arr.slice(m, r) );
      mergeSort(arr, l, m);
      mergeSort(arr, m+1, r); 
      merge(arr, l, m, r);
      console.log(arr)
    }
}

function merge(arr, l , m,  r){
  var n1 = m-l+1;
  var n2 = r- m;
  var L = [];
  var R  =[]; 
    for (var i = 0; i < n1; i++) 
          L[i] = arr[l + i]; 
    for (var j = 0; j < n2; j++) 
        R[j] = arr[m + 1+ j]; 
  i = 0;
  j = 0; 
  var k = l; // start Index of merged subarray 
  while (i < n1 && j < n2) 
  { 
      if (L[i] <= R[j]) 
      { 
          arr[k] = L[i]; 
          i++; 
      } 
      else
      { 
          arr[k] = R[j]; 
          j++; 
      } 
      k++; 
  }
  while (i < n1) 
    { 
        arr[k] = L[i]; 
        i++; 
        k++; 
    } 
  
    while (j < n2) 
    { 
        arr[k] = R[j]; 
        j++; 
        k++; 
    } 
}
